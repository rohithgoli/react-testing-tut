# RTL getAllBy Queries

    + Find multiple elements in the DOM 
    + getAllBy returns an array of all matching nodes for a query, and throws
        an error if no elements match
    + Every getBy query has a corresponding getAllBy query

# TextMatch
    + To all the queries, we came across, the first argument we pass is type of TextMatch
    + TextMatch represents a type which can be either a 
        string

            + eg: <div>Hello World</div>
                screen.getByText('Hello World') //full string match
                screen.getByText('llo Worl', {exact: false}) // substring match
                screen.getByText('hello world', {exact: false}) // ignore case

        regex

            + eg: <div>Hello World</div>
                screen.getByText(/World/) // substring match
                screen.getByText(/world/i) // substring match, ignore case
                screen.getByText(/^hello world$/i) // full string match, ignore case

        function
            + (content?: string, element?: Element | null) => boolean
            <div>Hello World</div>

            screen.getByText((content) => content.startsWith('Hello'))


# What if we want to test , a certain element is not rendered in the DOM ?
    + Generally, in conditional rendering, certain elements are not present during initial render in the UI


# queryBy and queryAllBy class of Queries

    + queryBy
        + returns the matching node for a query, and return null if no elements match
        + Useful for asserting an element that is not present
        + Throws an error if more than one match is found

    + queryAllBy
        + Returns an array of all matching nodes for a query, and return an empty array

NOTE:
    + getBy and getAllBy class of queries to assert if elements are present in the DOM
    + queryBy and queryAllBy class of queries to assert if elements are not present in the DOM

    + Appearance/Disappearance -> What if elements are not present in the DOM to being but make their way
        into the DOM after some time?

        eg: Data that is fetched from a server will be rendered only after a few milliseconds

# findBy & findAllBy
    + findBy
        + Returns a Promise which resolves when an element is found which matches the given query
        + The promise is rejected if no element is found or if more than one element is found after a default
            timeout of 1000ms

    + findAllBy
        + Returns a promise which resolves to an array of elements when any elements are found
            which match the given query
        + The promise is rejected if no elements are found after a default timeout of 1000ms

    + When working with async code, we can use findBy & findAllBy class of queries of RTL
    + They are useful to wait for an element to appear or disappear in response to an event, userAction,
        timeout or promise