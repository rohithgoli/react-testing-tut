# How to test component wrapped in a provider ?
# How to test custom hooks ?

# How to test component wrapped in a provider ?

    Goal: To test MuiMode component

    + RTL providers a wrapper option while rendering
        So on the render function, add a second argument, an object,
        This wraps the component with provider before rendering

    + There also exists a way to specify the wrapper option once for every test in the App

# Custom Render Functions

    + context provider wraps only a few components
    + However, for a theme provider (or) redux store provider, 
        it makes sense to add wrapper at top-level & available for every component
        resulting in not to specify the wrapper option at every test

    + A way to acheive a single wrapper across all tests, is by writing Custom Render Function

    + testing-library.com --> docs --> Frameworks --> React Testing Library --> Setup --> Custom Render


# How to test Custom React Hooks with the Testing Library ?

    + For testing custom hooks, we do not rely on render, screen as RTL provides renderHook function
    + Unlike a regular component which can be asserted using screen, Hooks do not have any DOM elements
        Instead renderHook will wrap the hook inside function component, invoke the hook, and returns an object
        from which we can destructure the property called result
    + On this result, there exists a property called current, which will contain all the return values from the
        Custom Hook


# Act Utility
    + act is a function that ensures updates are processed before assertions are made
    + When testing customHooks, code that causes state updates, RTL cannot wrap them inside act function
        we have to manually import it that causes state updates